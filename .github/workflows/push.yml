name: "Publish new version to PowerShell Gallery when something is pushed to the master branch"

on: 
  push:
    paths-ignore:
      - build/**
      - '*.md'

    branches:
      - master

jobs:
  job1:
    name: Job 1
    runs-on: ubuntu-18.04
    steps:
    - name: See if zip exists
      run: zip --help
    - name: Checkout repository
      uses: actions/checkout@v2.3.1
    - name: Set environment variables
      run: |
        $Username, $ProjectName = $env:GITHUB_REPOSITORY -split "/"
        Write-Output "::set-env name=GH_PROJECTNAME::$ProjectName"
        Write-Output "::set-env name=GH_USERNAME::$Username"
      shell: pwsh
    - name: Step 0
      run : |
        Install-Module -Name "ChangelogManagement" -Scope "CurrentUser" -Force -ErrorAction "Stop"
      shell: pwsh
    - name: Step 1
      run: |
        
        $ChangeLog = Get-ChangeLogData -Path .\CHANGELOG.md -ErrorAction "Stop"

        $EmptyUnreleasedChangeLog = $true
        $ReleaseNotes = foreach ($Property in $ChangeLog.Unreleased.Data.PSObject.Properties.Name) {
          $Data = $ChangeLog.Unreleased.Data.$Property

          if ($Data) {
            $EmptyUnreleasedChangeLog = $false

            Write-Output $Property

            foreach ($item in $Data) {
              Write-Output ("- {0}" -f $item)
            }
          }
        }

        if ($EmptyUnreleasedChangeLog -eq $true) {
          throw "Can not deploy with empty change log"
        }

        Write-Output ("::set-env name=changelog::{0}" -f ($ChangeLog | ConvertTo-Json -Depth 3))
        Write-Output ("::set-env name=ReleaseNotes::{0}" -f ([String]::Join(";;", $ReleaseNotes)))
      shell: pwsh
    - name: Step 2
      run: |
        Update-ModuleManifest -Path .\adamcook-mycicdtestrepo\adamcook-mycicdtestrepo.psd1 -ReleaseNotes ($env:ReleaseNotes -split ';;')
      shell: pwsh
    - name: List directory
      run: ls
      shell: pwsh
    - name: Upload math result for job 1
      uses: actions/upload-artifact@v2
      with:
        name: repo
        path: .
  job2:
    name: Job 2
    runs-on: ubuntu-18.04
    needs: job1
    steps:
    - name: List directory
      run: ls
      shell: pwsh
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: repo
    - name: List directory
      run: ls 
      shell: pwsh
    - name: Get contents of file in downloaded artifact
      run: Get-Content -Path .\adamcook-mycicdtestrepo\adamcook-mycicdtestrepo.psd1
      shell: pwsh
      