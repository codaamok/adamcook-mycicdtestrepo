name: "My testing workflow"

on: 
  push:
    paths-ignore:
      - build/**
      - '*.md'

    branches:
      - master

jobs:
  job1:
    name: Job 1
    runs-on: ubuntu-18.04
    steps:
    - name: Set environment variables
      run: |
        $Username, $ProjectName = $env:GITHUB_REPOSITORY -split "/"
        Write-Output "::set-env name=GH_PROJECTNAME::$ProjectName"
        Write-Output "::set-env name=GH_USERNAME::$Username"
      shell: pwsh

    - name: Checkout repository
      uses: actions/checkout@v2.3.1
      with:
        path: folder/${{ env.GH_PROJECTNAME }}

    - name: Create archive of repository
      run: zip -r ${GH_PROJECTNAME}_1.0.0.zip ./folder/$GH_PROJECTNAME/

    - name: List directory recursively
      run: ls -R

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "1.0.0"
        release_name: Some new release!
        draft: false
        prerelease: false
    - name: Upload Release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./${{ env.GH_PROJECTNAME }}_1.0.0.zip
        asset_name: ${{ env.GH_PROJECTNAME }}_1.0.0.zip
        asset_content_type: application/zip
  